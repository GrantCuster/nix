#!/bin/bash
#
# Declare the associative array with option strings as keys and commands as values
declare -A options=(
	['obsidian']='obsidian'
	['chrome']='google-chrome-stable'
	['restart Waybar']='waybar_reload'
	['manage Bluetooth']='blueman-manager'
	['brightness set bright']='brightnessctl set 100%'
	['brightness set medium']='brightnessctl set 50%'
	['brightness set dark']='brightnessctl set 25%'
	['brightness set darkest']='brightnessctl set 10%'
	['Nix rebuild home']='home-manager switch --flake /home/grant/nix#home'
	['Nix rebuild bix']='sudo nixos-rebuild switch --flake /home/grant/nix#bix'
	['volume off']='amixer set Master 0%'
	['volume set low']='amixer set Master 25%'
	['volume set medium']='amixer set Master 50%'
	['volume set high']='amixer set Master 75%'
	['volume set full']='amixer set Master 100%'
	['screenshot monitor']='hyprshot -m output -o /home/grant/screenshots/'
	['screenshot window']='hyprshot -m window -o /home/grant/screenshots/'
	['screenshot region']='hyprshot -m region -o /home/grant/screenshots/'
	['record monitor']="wf-recorder -f /home/grant/screenrecordings/$(date +'%Y-%m-%d-%H%M%S_recording.mp4')"
	['record region']="record_region"
	['record window']="record_window"
	['spotify']='spotify'
	['reboot']='reboot'
	['switch to external monitor']="hyprctl keyword monitor DP-3,preferred,0x0,auto; hyprctl keyword monitor \"eDP-1, disable\"; go_home_space"
	['switch to laptop monitor']="hyprctl keyword monitor eDP-1,preferred,0x0,1.333333; hyprctl keyword monitor \"DP-3, disable\"; go_home_space"
	['sleep']="systemctl suspend"
	['make gif from recording']="last_recording_to_gif"
	['make wide gif from recording']="last_recording_to_gif 1200"
	['restart libinput gestures']="restart_libinput_gestures"
	['timer restart']="timer clear; timer start"
	['timer off']="timer clear"
	['timer start']="timer start"
	['pause timer']="timer stop"
)

option_names_raw=$(printf '%s^' "${!options[@]}")
history_file="/tmp/system_menu_history"
IFS=$'^' read -r -d '' -a option_names <<<"$option_names_raw"

mapfile -t history <"$history_file"

# Initialize arrays for sorted items and remaining items
sorted=()

# if item is in history use history position
for item in "${history[@]}"; do
	if [[ " ${option_names[*]} " == *" $item "* ]]; then
		sorted+=("$item")
	fi
done

# after history sort add any remaing
for item in "${option_names[@]}"; do
	if [[ " ${history[*]} " != *" $item "* ]]; then
		sorted+=("$item")
	fi
done

# Concatenate the sorted list with the remaining items
sorted+=("${remaining[@]}")

sorted_names_raw=$(printf '%s\n' "${sorted[@]}")

choice=$(echo "$sorted_names_raw" | fzf --exact --layout reverse --no-separator --no-info --no-bold --prompt='> ' --color fg:#a89984,bg:#1d2021,hl:#ebdbb2,fg+:#ebddb2,bg+:#282828,hl+:#b8bb26 --color info:#ebddb2,prompt:#a89984,spinner:#ebddb2,pointer:#282828,marker:#282828,header:#ebddb2)

# Execute the chosen command
if [[ -n "${options[$choice]}" ]]; then
	save_history "/tmp/system_menu_history" "$choice"
	eval ${options[$choice]}
	fzf_system_menu
else
	echo "Invalid choice."
fi
