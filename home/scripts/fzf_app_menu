#!/bin/bash

execute_choice() {
	choice="$1"

	declare -A options=(
		['default term']='tmux switch-client -t default || tmux new-session -s default'
		['default browser']='nohup google-chrome-stable &'
	)

	option_names_raw="default term
  new browser"

	tmux_sessions=$(tmux list-sessions | sed -E 's/:.*$//' | awk '{print "(tmux) " $0}' | grep -v -e "(tmux) menu" -e "(tmux) default")

	minimized_options=$(hyprctl clients -j | jq -r 'reverse' | jq -r '.[] | select(.workspace.name | startswith("special")) | "(\(.class)) \(.title)"')

	originalAddress=$(hyprctl activewindow -j | jq -r .address)

	# Execute the chosen command
	if [[ "$choice" == "" ]]; then
		hyprctl dispatch closewindow "address:$originalAddress"
		restart_fzf_menu
	elif [[ -n "${options[$choice]}" ]]; then
		originalAddress=$(hyprctl activewindow -j | jq -r .address)
		eval ${options[$choice]}
		if [[ "$choice" == "new browser" ]]; then
			sleep 0.3 && hyprctl dispatch closewindow "address:$originalAddress"
		fi
		restart_fzf_menu
	elif [[ "$tmux_sessions" == *"$choice"* ]]; then
		index=0
		found=false
		while IFS= read -r line; do
			((index++))
			if [[ "$line" == "$choice" ]]; then
				found=true
				break
			fi
		done <<<"$tmux_sessions"
		entry=$(echo "$tmux_sessions" | sed -n "${index}p")
		session=$(echo "$entry" | sed 's/(tmux) //g')
		tmux switch-client -t "$session"
		restart_fzf_menu
	elif [[ "$minimized_options" == *"$choice"* ]]; then
		index=0
		found=false
		while IFS= read -r line; do
			((index++))
			if [[ "$line" == "$choice" ]]; then
				found=true
				break
			fi
		done <<<"$minimized_options"
		address=$(hyprctl clients -j | jq -r 'reverse' | jq -r '.[] | select(.workspace.name | startswith("special")) | .address' | sed -n "${index}p")

		workspace=$(hyprctl activeworkspace -j | jq -r .id)
		size=$(hyprctl activewindow -j | jq -r '.size | "\(.[0]) \(.[1])"')

		originalAddress=$(hyprctl activewindow -j | jq -r .address)

		activewindow=$(hyprctl activewindow -j)
		targetX=$(echo "$activewindow" | jq -r '"\(.at.[0] + .size.[0] * 0.5|round)"')
		targetY=$(echo "$activewindow" | jq -r '"\(.at.[1] + .size.[1] * 0.5|round)"')
		targetW=$(echo "$activewindow" | jq -r '"\(.size.[0])"')
		targetH=$(echo "$activewindow" | jq -r '"\(.size.[1])"')
		finalTargetX=$((targetX + 8))
		finalTargetY=$((targetY + 8))

		hyprctl --batch "setprop address:$address alpha 0.0 lock ; dispatch togglespecialworkspace $address ; dispatch movetoworkspace $workspace ; dispatch togglefloating address:$address ; dispatch resizewindowpixel exact $targetW $targetH,address:$address ; dispatch movecursor $finalTargetX $finalTargetY ; dispatch togglespecialworkspace $address ; dispatch togglefloating address:$address ; dispatch closewindow address:$originalAddress"
		sleep 0.2 && hyprctl setprop address:$address alpha 1.0 lock
		restart_fzf_menu
	else
		echo "Invalid choice."
	fi
}

execute_choice "$(fzf_get_app_list | fzf --bind 'ctrl-r:reload(fzf_get_app_list)' --layout reverse --info inline)"
